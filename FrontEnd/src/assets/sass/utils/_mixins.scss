// @import '~bootstrap/scss/mixins';

@mixin mobile-and-smaller {
  @include media-breakpoint-down('sm') {
    @content;
  }
}

@mixin md-and-smaller {
  @include media-breakpoint-down('md') {
    @content;
  }
}

@mixin lg-and-larger {
  @include media-breakpoint-up('lg') {
    @content;
  }
}

/**
 * STYLE GUIDE TYPOGRAPHY MIXINS.
 */
// Mixin for the type of font. Argument should be one of the strings in the following if statements
@mixin font-type($type) {
  font-family: $primary-font-stack;

  @if $type == 'price-related-large' {
    font-weight: $bold-font-weight;
    font-size: $lg-font-size;
    color: $primary-dark-color;
  } @else if $type == 'price-related-small' {
    font-weight: $bold-font-weight;
    font-size: $xs-font-size;
    color: $primary-dark-color;
  } @else if $type == 'address-related' {
    font-weight: $regular-font-weight;
    font-size: $sm-font-size;
    color: $primary-dark-color;
  } @else if $type == 'tooltip' {
    font-weight: $regular-font-weight;
    font-size: $md-font-size;
    color: $primary-dark-color;
  } @else if $type == 'primary-input-text' {
    font-weight: $bold-font-weight;
    font-size: $sm-font-size;
    color: $primary-input-color;
  } @else if $type == 'title' {
    font-weight: $bold-font-weight;
    font-size: $lg-font-size;
    color: $secondary-dark-color;
  } @else if $type == 'secondary-title' {
    font-weight: $bold-font-weight;
    font-size: $lg-font-size;
    color: $primary-dark-color;
  } @else if $type == 'primary-text' {
    font-weight: $bold-font-weight;
    font-size: $sm-font-size;
    color: $secondary-dark-color;
  } @else if $type == 'secondary-text' {
    font-weight: $regular-font-weight;
    font-size: $sm-font-size;
    color: $secondary-dark-color;
  } @else if $type == 'label-text' {
    font-weight: $regular-font-weight;
    font-size: $md-font-size;
    color: $primary-dark-color;
  } @else if $type == 'error-label-text' {
    font-weight: $regular-font-weight;
    font-size: $xs-font-size;
    color: $error-color;
  } @else if $type == 'subtitle' {
    font-weight: $regular-font-weight;
    font-size: $xs-font-size;
    color: $secondary-dark-color;
  } @else if $type == 'special' {
    font-family: $secondary-font-stack;
    font-weight: $bold-font-weight;
    font-size: $md-font-size;
    color: $primary-5-color;
  } @else {
    @error "#{$type} is not one of the available font styles. \
            Check _mixins.scss to see which font styles you can use.";
  }
}

@mixin mousedown {
  &:active {
    @content;
  }

  &:active:hover {
    @content;
  }

  &:hover:active {
    @content;
  }
}

@mixin set-box-shadow($color: $primary-dark-color) {
  box-shadow: 2px 4px 8px rgba($color, $alpha: 0.3) !important;
}

@mixin no-show {
  border: 0 !important;
  border-radius: 0 !important;
  background-color: rgba(255, 255, 255, 0) !important;
  padding: 0 !important;
  margin: 0 !important;
  box-shadow: none !important;
  outline: none !important;
}

@mixin thin-border($size: 'lg', $color: $secondary-light-color) {
  @if $size == 'sm' {
    border: 2px solid $color;
  } @else if $size == 'md' {
    border: 4px solid $color;
  } @else if $size == 'lg' {
    border: 6px solid $color;
  } @else {
    @error "#{$size} is not one of the available border sizes. \
            Check _mixins.scss to see which sizes you can use.";
  }
}

/**
 * Bootstrap padding and margin mixins below (so you don't have the !important).
 */
// TODO this is copied from bootstrap, don't do this tho...
$spacer: 1rem;
$spacers: (
  (
    0: 0,
    1: ($spacer * .25),
    2: ($spacer * .5),
    3: $spacer,
    4: ($spacer * 1.5),
    5: ($spacer * 3)
  )
);

@function map-get-or-key($map, $key) {
	@if map-has-key($map, $key) or map-has-key($map, -$key) {
		@if $key != 'auto' and type-of($key) == 'number' and $key < 0 {
			@return 0 - map-get($map, -$key);
		} @else {
			@return map-get($map, $key);
		}
	} @else if type-of($key) == 'string' {
		@return unquote($key);
	} @else {
		@return $key;
	}
}

@function bsize($key) {
	@return map-get-or-key($spacers, $key);
}

@mixin m($space) {
	margin: bsize($space);
}

@mixin mt($space) {
	margin-top: bsize($space);
}

@mixin mb($space) {
	margin-bottom: bsize($space);
}

@mixin ml($space) {
	margin-left: bsize($space);
}

@mixin mr($space) {
	margin-right: bsize($space);
}

@mixin p($space) {
	padding: bsize($space);
}

@mixin pt($space) {
	padding-top: bsize($space);
}

@mixin pb($space) {
	padding-bottom: bsize($space);
}

@mixin pl($space) {
	padding-left: bsize($space);
}

@mixin pr($space) {
	padding-right: bsize($space);
}

@mixin mx($space) {
	@include ml($space);
	@include mr($space);
}

@mixin my($space) {
	@include mt($space);
	@include mb($space);
}

@mixin px($space) {
	@include pl($space);
	@include pr($space);
}

@mixin py($space) {
	@include pt($space);
	@include pb($space);
}
